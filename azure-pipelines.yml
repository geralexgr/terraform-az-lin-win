trigger:
- none

pr: none

pool:
  vmImage: ubuntu-latest

parameters:
- name: image
  displayName: VM Image
  type: string
  default: windows
  values:
  - windows
  - linux


stages:

  - stage:
    displayName: Deploy terraform resources
    jobs:
      - job:
        displayName: Deploy vm
        steps:
          - task: CmdLine@2
            displayName: Install terraform CLI
            inputs:
              script: |
                curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
                sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
                sudo apt-get update && sudo apt install terraform

          - task: AzureCLI@2
            displayName: login into your subscription
            inputs:
              azureSubscription: 'AzureMSDN'
              scriptType: 'pscore'
              addSpnToEnvironment: true
              scriptLocation: 'inlineScript'
              inlineScript: |
                $SUBSCRIPTION_ID=$(az account show --query id --output tsv)
                echo "##vso[task.setvariable variable=ARM_CLIENT_ID]$($env:servicePrincipalId)"
                echo "##vso[task.setvariable variable=ARM_CLIENT_SECRET;issecret=true]$($env:servicePrincipalKey)"
                echo "##vso[task.setvariable variable=ARM_TENANT_ID]$($env:tenantId)"
                echo "##vso[task.setvariable variable=ARM_SUBSCRIPTION_ID]$SUBSCRIPTION_ID"


          # - task: Bash@3
          #   displayName: Terraform apply 
          #   inputs:
          #     targetType: 'inline'
          #     script: |
          #       cd $(Build.SourcesDirectory)/${{ parameters.image }}
          #       terraform init \
          #       -backend-config=subscription_id="$(ARM_SUBSCRIPTION_ID)" \
          #       -backend-config=tenant_id="$(ARM_TENANT_ID)" \
          #       -backend-config=client_id="$(ARM_CLIENT_ID)" \
          #       -backend-config=client_secret="$(ARM_CLIENT_SECRET)"
          #       terraform apply -auto-approve 

          # - task: PowerShell@2
          #   displayName: login into your subscription with az cli
          #   inputs:
          #     targetType: 'inline'
          #     script: |
          #       az login --service-principal -u $(CLIENT_ID) -p $(CLIENT_SECRET) --tenant $(TENANT_ID)
                
          # - task: CmdLine@2
          #   displayName: Terraform apply 
          #   inputs:
          #     script: |
          #       cd $(Build.SourcesDirectory)/${{ parameters.image }}
          #       terraform init 
          #       terraform apply -auto-approve 

          - task: Bash@3
            displayName: Terraform apply 
            inputs:
              targetType: 'inline'
              script: |
                cd $(Build.SourcesDirectory)/${{ parameters.image }}
                export TF_LOG=DEBUG
                terraform init \
                -backend-config=subscription_id="$(ARM_SUBSCRIPTION_ID)" \
                -backend-config=tenant_id="$(ARM_TENANT_ID)" \
                -backend-config=client_id="$(ARM_CLIENT_ID)" \
                -backend-config=client_secret="$(ARM_CLIENT_SECRET)"
                terraform apply -auto-approve 
                
